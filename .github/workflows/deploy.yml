# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy

on:
  push:
    branches: [ master, develop, cicd, '*staging*' ]

permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 📥
      uses: actions/checkout@v2

    - name: Use Node.js 16.14 ⚙️
      uses: actions/setup-node@v1
      with:
        node-version: 16.14

    - name: Setup vars 📋
      id: vars
      run: |
        echo ::set-output name=distdir::$(git rev-parse --short ${{ github.sha }})-16.x-dist

    - name: Install 🎯
      run: yarn install

    - name: Build 🏃
      run: yarn build --env DIST_BASE_URL='${{ steps.vars.outputs.distdir }}'
      env:
        DIST_BASE_URL: ${{ steps.vars.outputs.distdir }}
    - name: Upload artifacts 📤
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: dist
        if-no-files-found: error

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout 📥
      uses: actions/checkout@v2

    - name: Download artifacts 📥
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: dist

    - name: Configure AWS credentials 🔐
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::632571768781:role/tileviewer-cicd-role
        role-duration-seconds: 900 # the ttl of the session, in seconds.
        aws-region: us-west-2

    - name: Setup vars 📋
      id: vars
      run: |
        echo ::set-output name=identifier::$(git rev-parse --short ${{ github.sha }})-16.x
        echo ::set-output name=distdir::$(git rev-parse --short ${{ github.sha }})-16.x-dist

    - name: Prep files 🔨
      run: npm run aws_deploy
      env:
        IDENTIFIER: ${{ steps.vars.outputs.identifier }}
        DISTDIR: ${{ steps.vars.outputs.distdir }}

    - name: Copy new index file to S3 📤
      run: aws s3 cp $DISTDIR/index.html s3://3dtileviewer/tileviewer/$IDENTIFIER-tileviewer.html --no-progress
      env:
        IDENTIFIER: ${{ steps.vars.outputs.identifier }}
        DISTDIR: ${{ steps.vars.outputs.distdir }}

    - name: Copy new dist dir to S3 📤
      run: aws s3 cp $DISTDIR s3://3dtileviewer/tileviewer/$DISTDIR --recursive --no-progress
      env:
        IDENTIFIER: ${{ steps.vars.outputs.identifier }}
        DISTDIR: ${{ steps.vars.outputs.distdir }}

    - name: Deployment complete! 🚀
      run: |
        echo "Your build is at: https://d5ximzqa49b6a.cloudfront.net/tileviewer/${{ steps.vars.outputs.distdir }}/index.html"